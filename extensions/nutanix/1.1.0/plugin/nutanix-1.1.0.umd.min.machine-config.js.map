{"version":3,"file":"nutanix-1.1.0.umd.min.machine-config.js","mappings":"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","sources":["webpack://nutanix-1.1.0/./machine-config/nutanix.vue?4e99","webpack://nutanix-1.1.0/./.shell/assets/brand/ sync ^\\.\\/.*\\/metadata\\.json$","webpack://nutanix-1.1.0/./nutanix.ts","webpack://nutanix-1.1.0/./machine-config/nutanix.vue?3fc7","webpack://nutanix-1.1.0/./machine-config/nutanix.vue","webpack://nutanix-1.1.0/./machine-config/nutanix.vue?c995"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./nutanix.vue?vue&type=style&index=0&id=08d106de&scoped=true&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4408bcbc\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var map = {\n\t\"./csp/metadata.json\": 6471,\n\t\"./federal/metadata.json\": 1862,\n\t\"./harvester/metadata.json\": 1507,\n\t\"./rgs/metadata.json\": 8401,\n\t\"./suse/metadata.json\": 7259\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1177;","import { isArray } from \"lodash\";\n\ntype Options = {\n  value: any;\n  api: string;\n  field: string;\n  mapper?: Function;\n  filter?: Function;\n  initial?: string;\n  name?: string;\n}\n/**\n * Helper class for dealing with the nutanix API\n */\nexport class Nutanix {\n  public endpoint: string = '';\n  public username: string = '';\n  public password: string = '';\n  public port: string = '';\n  public insecure: boolean = false;\n  public clusterReferenceId: string = '';\n  private credentialID: string = '';\n  private endpoints: any;\n\n  private $dispatch: any;\n\n  constructor($store: any, obj: any) {\n    if (obj.nutanixcredentialConfig) {\n      Object.keys(obj.nutanixcredentialConfig).forEach((key) => {\n        (this as any)[key] = obj.nutanixcredentialConfig[key];\n      });\n      this.credentialID = obj.id;\n    } else {\n      // Copy from options to this\n      Object.keys(obj).forEach((key) => {\n        (this as any)[key] = obj[key];\n      });\n    }\n\n    this.$dispatch = $store.dispatch;\n  }\n\n  public async testConnection() {\n    const baseUrl = `/meta/proxy/${this.endpoint}:${this.port}`;\n    const url = `${baseUrl}/api/clustermgmt/v4.0/config/clusters`;\n    const headers = {\n      Accept: 'application/json',\n      \"X-API-Auth-Header\": 'Basic ' + btoa(this.username + ':' + this.password)\n    };\n\n    try {\n      const res = await this.$dispatch('management/request', {\n        url,\n        headers,\n        method: 'GET',\n        redirectUnauthorized: false,\n      }, { root: true });\n\n      if (res._status === 502) {\n        return { error: 'Could not proxy request - URL may not be in Rancher\\'s allow list' };\n      }\n\n      return res;\n\n    } catch (e) {\n      console.error(e); // eslint-disable-line no-console\n      return { error: e };\n    }\n  }\n\n  public async getClusterList(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: \"/api/clustermgmt/v4.0/config/clusters\",\n      field: 'data',\n      filter: (cluster: any) => cluster.config.hypervisorTypes.includes(\"AHV\"),\n      initial\n    });\n  }\n\n  public async getImages(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/vmm/v4.0/content/images',\n      field: 'data',\n      initial\n    });\n  }\n\n  public async getNetwork(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/networking/v4.0/config/subnets',\n      field: 'data',\n      mapper: async (network: any) => {\n        const vpc = network.subnetType === \"OVERLAY\" ? (await this.getVpc(network.vpcReference)).data : undefined;\n        return {\n          ...network,\n          baseName: network.name,\n          name: network.subnetType === \"OVERLAY\" ? `${network.name} (${vpc.name})` : network.name,\n        }\n      },\n      filter: (network: any) => (network.subnetType == \"OVERLAY\" || network.clusterReference == this.clusterReferenceId) && !network.isExternal,\n      initial\n    });\n  }\n\n  public async getVpc(vpcReference: string) {\n    return await this.makeComputeRequest(`/api/networking/v4.0/config/vpcs/${vpcReference}`);\n  }\n\n  public async getStorageContainer(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/clustermgmt/v4.0/config/storage-containers',\n      field: 'data',\n      filter: (storage: any) => storage.clusterExtId == this.clusterReferenceId,\n      initial\n    });\n  }\n\n  public async getCategories(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/prism/v4.0/config/categories',\n      field: 'data',\n      mapper: (categorie: any) => { return { ...categorie, name: `${categorie.key}=${categorie.value}` } },\n      filter: (categorie: any) => categorie.key !== \"Project\",\n      initial\n    });\n  }\n\n  public async getProjectsName(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/nutanix/v3/projects/list',\n      field: 'entities',\n      mapper: (project: any) => { return { ...project, name: `${project.spec.name}` } },\n      initial\n    });\n  }\n\n  // public async getNetworkNames(value: any, initial?: string) {\n  //   return await this.getOptions(value, '/os-tenant-networks', 'networks', (network: any) => {\n  //     return {\n  //       ...network,\n  //       name: network.label\n  //     };\n  //   }, initial);\n  // }\n\n  private async constructTotalResponse(apiPath: string, initialDataLength: number, total: number) {\n    const pageCount = Math.ceil(total / initialDataLength);\n    const data = [];\n    for (let i = 1; i < pageCount; i++) {\n      const nextPageResponse = await this.makeComputeRequest(`${apiPath}?$page=${i}`);\n      data.push(...nextPageResponse.data);\n    }\n\n    return data;\n  }\n\n  private async constructProjectTotalResponse(apiPath: string, initialDataLength: number, total: number) {\n    const pageCount = Math.ceil(total / initialDataLength);\n    const entities = [];\n    for (let i = 1; i < pageCount; i++) {\n      const nextPageResponse = await this.makeComputeRequest(`${apiPath}?$page=${i}`, 'POST');\n      entities.push(...nextPageResponse.entities);\n    }\n\n    return entities;\n  }\n\n  public async getOptions(options: Options) {\n    const { value, api, mapper, filter, initial, field } = options;\n    // We are fetching the data for the options\n    value.busy = true;\n    value.enabled = true;\n    value.selected = isArray(value.selected) ? [] : '';\n\n    let res;\n\n    if (api === '/api/nutanix/v3/projects/list') {\n      res = await this.makeComputeRequest(api, 'POST');\n      const total = res?.metadata?.total_matches ?? 0;\n      const pageCount = res?.entities?.length ?? 0;\n      if (pageCount < total) {\n        const entities = await this.constructProjectTotalResponse(api, pageCount, total);\n        res.entities = [...res.entities, ...entities];\n      }\n    }\n    else {\n      res = await this.makeComputeRequest(api);\n      const total = res?.metadata?.totalAvailableResults ?? 0;\n      const pageCount = res?.data?.length ?? 0;\n\n      if (pageCount < total) {\n        const data = await this.constructTotalResponse(api, pageCount, total);\n        res.data = [...res.data, ...data];\n      }\n    }\n\n    if (res && (res as any)[field]) {\n      let list = (res as any)[field] || [];\n\n      if (filter) {\n        list = list.filter((k: any) => filter(k));\n      }\n\n      if (mapper) {\n        list = await Promise.all(list.map(async (k: any) => await mapper(k)));\n      }\n\n      value.options.forEach((selected: any) => { list.push(selected) });\n\n      value.options = this.convertToOptions(list);\n      value.busy = false;\n\n      if (value.options.length < list.length) {\n        const unique = list.filter((obj: any, index: any) => {\n          return index !== list.findIndex((o: any) => obj.name === o.name);\n        });\n        value.duplicates = unique;\n      }\n\n      if (initial) {\n        const found = value.options.find((option: any) => option.value.name === initial);\n\n        if (found) {\n          value.selected = found.value;\n        }\n      }\n\n    } else {\n      value.options = [];\n      value.selected = isArray(value.selected) ? [] : null;\n      value.busy = false;\n      value.enabled = false;\n    }\n  }\n\n  public async makeComputeRequest(api: string, method: string = 'GET') {\n    const baseUrl = `/meta/proxy/${this.endpoint}:${this.port}`;\n    const url = `${baseUrl}${api}`;\n\n    const headers = {\n      Accept: 'application/json',\n      \"Content-Type\": 'application/json',\n      \"X-API-Auth-Header\": 'Basic ' + btoa(this.username + ':' + this.password),\n    };\n\n    try {\n      const res = await this.$dispatch('management/request', {\n        url,\n        headers,\n        method: method,\n        data: JSON.stringify({}),\n        redirectUnauthorized: false,\n      }, { root: true });\n\n      return res;\n    } catch (e) {\n      console.error(e); // eslint-disable-line no-console\n    }\n  }\n\n\n  private convertToOptions(list: any) {\n    const unique = list.filter((obj: any, index: any) => {\n      return index === list.findIndex((o: any) => obj.name === o.name);\n    });\n\n    const sorted = (unique || []).sort((a: any, b: any) => a.name.localeCompare(b.name));\n\n    return sorted.map((p: any) => {\n      return {\n        label: p.name,\n        value: p\n      };\n    });\n  }\n}\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".file-button[data-v-08d106de]{align-items:center;position:absolute;top:0;right:0;height:100%;display:flex}.file-button>.file-selector[data-v-08d106de]{height:59px;border-top-left-radius:0;border-bottom-left-radius:0}.nutanix-config[data-v-08d106de]{display:flex;align-items:center}.nutanix-config>.title[data-v-08d106de]{font-weight:700;padding:4px 0}.nutanix-config>.loading[data-v-08d106de]{margin-left:20px;display:flex;align-items:center}.nutanix-config>.loading>i[data-v-08d106de]{margin-right:4px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<script>\nimport Loading from '@shell/components/Loading';\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport CodeMirror from '@shell/components/CodeMirror.vue';\nimport Collapse from '@shell/components/Collapse.vue';\nimport Checkbox from '@shell/rancher-components/Form/Checkbox/Checkbox.vue';\nimport RadioGroup from \"@components/Form/Radio/RadioGroup\";\n\nimport { NORMAN, SECRET } from '@shell/config/types';\nimport { stringify } from '@shell/utils/error';\nimport { _CREATE, _EDIT, _VIEW } from '@shell/config/query-params';\n\nimport { Nutanix } from '../nutanix.ts';\nimport UnitInput from \"@shell/components/form/UnitInput\";\n\n// this function is used to setup all Select input option\nfunction initOptions(enabled = false, init = null, options = []) {\n  return {\n    options:  options,\n    selected: init,\n    busy:     false,\n    enabled:  enabled,\n    baseOption: null,\n  };\n}\n\n// this function is used to setup all Select input option\nfunction initUnitOptions(enabled = false, init = null, _min = null, _max = null) {\n  return {\n    options: [],\n    selected: init,\n    min: _min,\n    max: _max,\n    busy: false,\n    enabled: enabled,\n    status: \"\",\n    tooltip: \"\",\n  };\n}\n\nexport default {\n  components: {\n    Banner, Loading, KeyValue,\n    LabeledSelect, UnitInput, CodeMirror, Collapse, Checkbox, RadioGroup\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    uuid: {\n      type:     String,\n      required: true,\n    },\n\n    cluster: {\n      type:    Object,\n      default: () => ({})\n    },\n\n    credentialId: {\n      type:     String,\n      required: true,\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n\n    busy: {\n      type:    Boolean,\n      default: false\n    },\n\n    provider: {\n      type:     String,\n      required: true,\n    }\n  },\n  emits: ['validationChanged'],\n\n  async fetch() {\n    if ( !this.credentialId ) {\n      return;\n    }\n\n    this.$emit('validationChanged', false);\n\n    if (this.mode == _CREATE) {\n      this.initAuthentication();\n      return\n    }\n\n    await this.initAuthentication();\n\n    this.clusters.selected = this.clusters.baseOption.filter(e => e.label == this.value.cluster)[0];\n\n    if (this.clusters.selected === undefined) {\n      return;\n    }\n\n    await this.setClusterReferenceId(this.clusters.selected.value);\n\n    this.projectName.selected = this.projectName.options.find((o) => o.value.name === this.value.project)?.value;\n    this.vmCpus.selected = this.value.vmCpus;\n    this.vmCpuPassthrough = this.value.vmCpuPassthrough;\n    this.vmCores.selected = this.value.vmCores;\n    this.vmMem.selected = this.value.vmMem / 1024;\n\n    this.vmImage.selected = this.vmImage.options.find((o) => o.value.name === this.value.vmImage)?.value;\n    this.vmImageSize.selected = this.value.vmImageSize;\n\n    this.networks.selected = this.value.vmNetwork.map(e => this.networks.baseOption.find((o) => o.value.extId === e || o.extId === e || o.label === e));\n    this.filterNetworks();\n    this.bootType = this.value.bootType === \"legacy\" ? \"Legacy\" : \"UEFI\";\n    this.vmCategories.selected = this.value.vmCategories.map(e => this.vmCategories.options.find((o) => o.name === e || o.value?.name === e));\n\n    this.vmSerialPort = this.value.vmSerialPort;\n\n    this.additionalDiskSize.selected = this.value.diskSize;\n\n    if (this.additionalDiskSize.selected !== 0 && this.additionalDiskSize.selected !== null)\n      this.storageContainer.selected = this.storageContainer.options.find((o) => o.value.containerExtId === this.value.storageContainer);\n\n    this.cloudInit = this.value.cloudInit;\n\n    this.$emit('validationChanged', true);\n\n    if (this.mode == _VIEW) {\n      this.mybusy = true;\n    }\n  },\n\n  data() {\n    return this.InitData();\n  },\n\n  // This wath the credentialId selector input to call the fetch above function\n  watch: {\n    'credentialId'() {\n      this.$fetch();\n    },\n    'value'(newVal, oldVal) {\n      const oldCat = oldVal.vmCategories;\n      const oldNetworks = oldVal.vmNetwork;\n\n      if (this.vmCategories.selected.length) {\n        this.value.vmCategories = this.vmCategories.selected[0]?.label === undefined ?\n          this.vmCategories.selected.map(c => c.name) : this.vmCategories.selected.map(c => c.value.name);\n      } else {\n        this.value.vmCategories = [];\n      }\n      const uniqueNetworks =  _.uniq(this.value.vmNetwork);\n      this.value.vmNetwork = [...uniqueNetworks];\n    }\n  },\n  computed: {\n    value() {\n      return this.value;\n    }\n  },\n\n  methods: {\n    stringify,\n\n    async initAuthentication() {\n      let obj = this.InitData();\n      Object.keys(obj).forEach((key) => {\n        (this)[key] = obj[key];\n      });\n\n      try {\n        this.credential = await this.$store.dispatch('rancher/find', { type: NORMAN.CLOUD_CREDENTIAL, id: this.credentialId });\n      } catch (e) {\n        this.credential = null;\n      }\n\n      // Try and get the secret for the Cloud Credential as we need the plain-text password\n      try {\n        const id = this.credentialId.replace(':', '/');\n        const secret = await this.$store.dispatch('management/find', { type: SECRET, id });\n        const data = secret.data['nutanixcredentialConfig-password'];\n        const password = atob(data);\n\n        this.password = password;\n        this.havePassword = true;\n        this.ready = true;\n\n      } catch (e) {\n        this.password = '';\n        this.havePassword = false;\n        console.error(e);\n      }\n\n      this['authenticating'] = true;\n\n      // Create a Nutanix object to do the API calls\n      const os = new Nutanix(this.$store, this.credential);\n      os.password = this.password;\n      this.os = os;\n\n      await this.setConfiguration();\n    },\n\n    InitData() {\n      return {\n        authenticating: false,\n        ready: false,\n        os: null,\n        password: null,\n        havePassword: false,\n        clusters: initOptions(),\n        clusterReferenceId: '',\n\n        // Machine pool configuration\n        projectName: initOptions(true, null, [{ name: \"-- NO PROJECT --\" }]),\n        vmCpus: initUnitOptions(true, \"2\", 2, 128),\n        vmCpuPassthrough: false,\n        vmCores: initUnitOptions(true, \"1\", 1, 128),\n        vmMem: initUnitOptions(true, \"4\", 4, 512),\n        vmImage: initOptions(),\n        vmImageSize: initUnitOptions(true, \"0\", 0, 10000),\n        networks: initOptions(false, []),\n        additionalDiskSize: initOptions(false, 0),\n        storageContainer: initOptions(),\n        is_SC_colapse: false,\n        cloudInit: \"#cloud-config\\n\\n\",\n        vmCategories: initOptions(false, []),\n        vmSerialPort: false,\n        bootType: \"Legacy\",\n\n        // other\n        t: this.$store.getters['i18n/t'],\n        mybusy: false,\n        errors: [],\n      };\n    },\n\n    async setConfiguration() {\n      // Fetch a token - if this succeeds, kick off async fetching the lists we need\n      await this.os.getProjectsName(this.projectName, this.value?.projectName);\n\n      if (!this.projectName.enabled) {\n        this['authenticating'] = false;\n        this.errors.push('Unable to get Nutanix Projects Name');\n        return;\n      }\n\n      await this.os.getClusterList(this.clusters, this.value?.clusterName).then(() => {\n        if (!this.clusters.enabled) {\n          this.errors.push('Unable to get Nutanix cluster');\n        }\n        this.clusters.baseOption = this.clusters.options;\n        this.networks.enabled = false;\n      });\n\n      await this.os.getImages(this.vmImage, this.value?.imageName).then(() => {\n        if (!this.vmImage.enabled) {\n          this.errors.push('Unable to get Nutanix Images');\n        }\n      });\n\n      await this.os.getCategories(this.vmCategories, this.value?.vmCategories).then(() => {\n        if (!this.vmCategories.enabled) {\n          this.errors.push('Unable to get Nutanix vmCategories');\n        }\n      });\n    },\n\n    // This function is call when the cluster selector input change\n    // this allow to dynamically change the network available for this cluster\n    async setClusterReferenceId(e) {\n      this.os.clusterReferenceId = e.extId;\n      this.networks.options = [];\n      this.storageContainer.options = [];\n\n      await this.os.getNetwork(this.networks, this.value?.vmNetwork).then(() => {\n        if (!this.networks.enabled) {\n          this.errors.push('Unable to get Nutanix Network');\n        }\n\n        this.networks.baseOption = this.networks.options;\n\n        if (this.projectName.selected) {\n          let networkIdList = this.projectName.selected.status.resources.subnet_reference_list.map(c => c.uuid);\n          this.networks.options = this.networks.baseOption.filter(network => networkIdList.includes(network.value.extId)); //  || vpcIdList.includes(network.value.extId)\n          this.networks.baseOption = this.networks.options;\n        }\n\n        if (this.networks.options.length === 0) {\n          this.networks.enabled = false;\n        }\n        else {\n          this.networks.enabled = true;\n        }\n      });\n\n      await this.os.getStorageContainer(this.storageContainer, this.value?.storageContainer).then(() => {\n        if (!this.storageContainer.enabled) {\n          this.errors.push('Unable to get Nutanix storageContainer');\n        }\n\n        this.additionalDiskSize.enabled = true;\n      });\n    },\n\n    dynamicProjectName(e) {\n      if (this.projectName.selected?.name == \"-- NO PROJECT --\") {\n        this.projectName.selected = null;\n        this.clusters.options = this.clusters.baseOption;\n      }\n      else {\n        let clusterReferenceIdList = e.status.resources.cluster_reference_list.map(c => c.uuid);\n\n        this.clusters.options = this.clusters.baseOption.filter(c =>\n          clusterReferenceIdList.includes(c.value.extId)\n        );\n      }\n\n      this.clusters.selected = null;\n      this.networks.selected = [];\n      this.networks.enabled = false;\n      this.additionalDiskSize.selected = 0;\n      this.additionalDiskSize.enabled = false;\n      this.storageContainer.selected = null;\n\n      if (this.clusters.options.length === 0) {\n        this.clusters.enabled = false;\n      }\n      else {\n        this.clusters.enabled = true;\n      }\n    },\n\n    // This function is call when the image selector input change\n    dynamicVmImageSize(object) {\n      this.vmImageSize.min = 10.0 + Math.ceil(object.sizeBytes / 1073741824);\n      // if (this.vmImageSize.selected < this.vmImageSize.min)\n      this.vmImageSize.selected = 10.0 + Math.ceil(object.sizeBytes / 1073741824);\n\n      if (this.vmImage?.duplicates?.find(e => e.name === object.name) !== undefined) {\n        this.vmImage.status = \"warning\"\n        this.vmImage.tooltip = this.t('driver.nutanix.config.component.vmImage.duplicates')\n      }\n      else {\n        this.vmImage.status = \"\"\n        this.vmImage.tooltip = \"\"\n      }\n    },\n\n    filterNetworks() {\n      if (this.networks.selected.length !== 0) {\n        if (this.networks.selected[0]?.subnetType)\n          this.networks.options = this.networks.baseOption.filter(\n          (network) =>  {\n            const selectedNetwork = this.networks.selected[0];\n            return (\n              selectedNetwork.subnetType === network.value.subnetType && \n              selectedNetwork.vpcReference === network.value.vpcReference && \n              selectedNetwork.isAdvancedNetworking === network.value.isAdvancedNetworking\n            );\n          }\n        );\n        else {\n          this.networks.selected = this.networks.selected.filter(network => network.value);\n          this.networks.options = this.networks.baseOption.filter(\n            (network) => {\n              const selectedNetwork = this.networks.selected[0];\n              return (\n                selectedNetwork.value.subnetType === network.value.subnetType && \n                selectedNetwork.value.vpcReference == network.value.vpcReference &&\n                selectedNetwork.value.isAdvancedNetworking === network.value.isAdvancedNetworking\n              );\n            }\n          );\n        }\n      } else {\n        this.networks.options = this.networks.baseOption;\n      }\n    },\n\n    // This function is call when the additional disk size input change\n    dynamicStorageContainer(e) {\n      this.additionalDiskSize.selected = e;\n\n      if (this.additionalDiskSize.selected !== 0 && this.additionalDiskSize.selected !== null)\n        this.storageContainer.enabled = true;\n      else\n        this.storageContainer.enabled = false;\n    },\n\n    // This function is call when the user add a wrong tag on a select input multiple\n    labelSelectAddWrongTag(object, component) {\n      component.selected = object.filter(network => network);\n    },\n\n    // Save all input data is the VUE values\n    syncValue() {\n      // Note: We don't need to provide password as this is picked up via the credential\n\n      // Copy the values from the form to the correct places on the value\n      this.value.cluster = this.clusters.selected?.value?.name ?? this.clusters.selected.name;\n\n      this.value.project = this.projectName.selected?.name == \"-- NO PROJECT --\" ? null : this.projectName.selected?.name;\n      this.value.vmCpus = this.vmCpus.selected.toString();\n      this.value.vmCpuPassthrough = this.vmCpuPassthrough;\n      this.value.vmCores = this.vmCores.selected.toString();\n      this.value.vmMem = (this.vmMem.selected * 1024).toString();\n      this.value.vmImage = this.vmImage.selected?.name;\n      this.value.vmImageSize = this.vmImageSize.selected.toString();\n      const networks = _.uniq(this.networks.selected.map(e => e.extId));\n      this.value.vmNetwork = networks;\n      this.value.bootType = this.bootType.toLowerCase();\n\n      if (this.vmCategories.selected.length) {\n        this.value.vmCategories = this.vmCategories.selected[0]?.label === undefined ?\n          this.vmCategories.selected.map(c => c.name) : this.vmCategories.selected.map(c => c.value.name);\n      } else {\n        this.value.vmCategories = [];\n      }\n      this.value.vmSerialPort = this.vmSerialPort;\n\n      if (this.additionalDiskSize.selected !== null)\n        this.value.diskSize = this.additionalDiskSize.selected.toString();\n      else\n        this.value.diskSize = this.additionalDiskSize.selected;\n\n      if (this.additionalDiskSize.selected !== 0 && this.additionalDiskSize.selected !== null)\n        this.value.storageContainer = this.storageContainer.selected?.containerExtId;\n\n      this.value.cloudInit = this.cloudInit;\n    },\n\n    // This function is call when the user change the input value\n    // To check if the value is between the min and max\n    validInput(e, value) {\n      value.selected = e;\n\n      if (value.selected < value.min || value.selected > value.max) {\n        value.status = \"error\"\n        value.tooltip = this.t(`driver.nutanix.config.component.vmCpus.tooltip`) + ` (${value.min} - ${value.max})`\n      }\n      else {\n        value.status = \"\"\n        value.tooltip = \"\"\n      }\n    },\n\n    // This function is call every time the user change a value\n    // To check if all the input are valid to activate the \"CREATE\" button\n    canAuthenticate() {\n      if (this.additionalDiskSize.selected !== 0 &&\n        this.additionalDiskSize.selected !== null &&\n        this.storageContainer.selected === \"\") {\n        this.$emit('validationChanged', false);\n        return\n      }\n\n\n      if (!!this.clusters.selected &&\n        !!this.vmCpus.selected &&\n        !!this.vmCores.selected &&\n        !!this.vmMem.selected &&\n        !!this.vmImage.selected &&\n        !!this.vmImageSize.selected &&\n        this.networks.selected.length > 0) {\n        this.$emit('validationChanged', true);\n        return\n      }\n\n      this.$emit('validationChanged', false);\n    },\n\n    // This fonction is call when the user click on the \"CREATE\" and \"Save\" Button\n    test() {\n      this.syncValue();\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Loading\n      v-if=\"$fetchState.pending\"\n      :delayed=\"true\"\n    />\n    <div>\n      <div class=\"nutanix-config\"> <!-- Nutanix loggin status -->\n        <div class=\"title\">\n          {{ t('driver.nutanix.config.title.main') }}\n        </div>\n        <div\n          v-if=\"authenticating && !ready\"\n          class=\"loading\"\n        >\n          <i class=\"icon-spinner icon-spin icon-lg\" />\n          <span>\n            {{ t('driver.nutanix.config.loggin.loading') }}\n          </span>\n        </div> <!-- Loading loggin -->\n        <div\n          v-else-if=\"authenticating && ready\"\n          class=\"loading\"\n        >\n          <i class=\"icon-checkmark icon-lg\" style=\"color: green;\"/>\n          <span>\n            {{ t('driver.nutanix.config.loggin.success') }}\n          </span>\n        </div> <!-- Success loggin -->\n        <div\n          v-else\n          class=\"loading\"\n        >\n          <i class=\"icon-close icon-lg\" style=\"color: red;\"/>\n          <span>\n            {{ t('driver.nutanix.config.loggin.failed') }}\n          </span>\n        </div> <!-- Failed loggin -->\n      </div>\n      <div class=\"row mt-10\"> <!-- Project Name / Cluster -->\n        <div class=\"col span-6\"> <!-- Project Name -->\n          <LabeledSelect\n            v-model:value=\"projectName.selected\"\n            labelKey=\"driver.nutanix.config.component.projectName.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.projectName.placeholder`)\"\n            :options=\"projectName.options\"\n            :disabled=\"!projectName.enabled || mybusy\"\n            :loading=\"projectName.busy\"\n            :searchable=\"false\"\n            @update:value=\"dynamicProjectName($event); canAuthenticate()\"\n          />\n        </div>\n        <div class=\"col span-6\"> <!-- Cluster input -->\n          <LabeledSelect\n            v-model:value=\"clusters.selected\"\n            labelKey=\"driver.nutanix.config.component.cluster.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.cluster.placeholder`)\"\n            :options=\"clusters.options\"\n            :disabled=\"!clusters.enabled || mybusy\"\n            :loading=\"clusters.busy\"\n            :searchable=\"false\"\n            :required=\"true\"\n            @update:value=\"setClusterReferenceId($event); canAuthenticate()\"\n          />\n        </div>\n      </div>\n      <hr class=\"mt-10\">\n      <div class=\"nutanix-config\"> <!-- VM Properties title -->\n        <div class=\"title\">\n          {{ t('driver.nutanix.config.title.properties') }}\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- vmCpus  /  Cores  / vmMem  -->\n        <div class=\"col span-4\"> <!-- vmCpus -->\n          <UnitInput\n            :value=\"vmCpus.selected\"\n            labelKey=\"driver.nutanix.config.component.vmCpus.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmCpus.suffix`)\"\n            type=\"number\"\n            :disabled=\"!vmCpus.enabled || mybusy\"\n            :loading=\"vmCpus.busy\"\n            :required=\"true\"\n            :min=\"vmCpus.min\"\n            :max=\"vmCpus.max\"\n            @update:value=\"validInput($event, vmCpus); canAuthenticate()\"\n            :status=\"vmCpus.status\"\n            :tooltip=\"vmCpus.tooltip\"\n          />\n          <Checkbox\n            :value=\"vmCpuPassthrough\"\n            :valueWhenTrue=\"true\"\n            labelKey=\"driver.nutanix.config.component.vmCpuPassthrough.label\"\n            style=\"margin-top: 5px;\"\n            @update:value=\"vmCpuPassthrough = !vmCpuPassthrough;\"\n            :disabled=\"mybusy\"\n          />\n        </div>\n        <div class=\"col span-4\"> <!-- Cores -->\n          <UnitInput\n            :value=\"vmCores.selected\"\n            labelKey=\"driver.nutanix.config.component.vmCores.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmCores.suffix`)\"\n            type=\"number\"\n            :disabled=\"!vmCores.enabled || mybusy\"\n            :loading=\"vmCores.busy\"\n            :required=\"true\"\n            :min=\"vmCores.min\"\n            :max=\"vmCores.max\"\n            @update:value=\"validInput($event, vmCores); canAuthenticate()\"\n            :status=\"vmCores.status\"\n            :tooltip=\"vmCores.tooltip\"\n          />\n        </div>\n        <div class=\"col span-4\"> <!-- vmMem -->\n          <UnitInput\n            :value=\"vmMem.selected\"\n            labelKey=\"driver.nutanix.config.component.vmMem.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmMem.suffix`)\"\n            type=\"number\"\n            :disabled=\"!vmMem.enabled || mybusy\"\n            :loading=\"vmMem.busy\"\n            :required=\"true\"\n            :min=\"vmMem.min\"\n            :max=\"vmMem.max\"\n            @update:value=\"validInput($event, vmMem); canAuthenticate()\"\n            :status=\"vmMem.status\"\n            :tooltip=\"vmMem.tooltip\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- Image  /  VM Disk Size -->\n        <div class=\"col span-6\"> <!-- Image input -->\n          <LabeledSelect\n            v-model:value=\"vmImage.selected\"\n            labelKey=\"driver.nutanix.config.component.vmImage.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.vmImage.placeholder`)\"\n            :options=\"vmImage.options\"\n            :disabled=\"!vmImage.enabled || mybusy\"\n            :loading=\"vmImage.busy\"\n            :searchable=\"false\"\n            :required=\"true\"\n            :status=\"vmImage.status\"\n            :tooltip=\"vmImage.tooltip\"\n            @update:value=\"dynamicVmImageSize($event); canAuthenticate()\"\n          />\n        </div>\n        <div class=\"col span-6\"> <!-- VM Disk Size input -->\n          <UnitInput\n            :value=\"vmImageSize.selected\"\n            labelKey=\"driver.nutanix.config.component.vmImageSize.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmImageSize.suffix`)\"\n            :min=\"vmImageSize.min\"\n            :max=\"vmImageSize.max\"\n            :disabled=\"!vmImageSize.enabled || mybusy\"\n            :loading=\"vmImageSize.busy\"\n            :required=\"true\"\n            type=\"number\"\n            @update:value=\"validInput($event, vmImageSize); canAuthenticate()\"\n            :status=\"vmImageSize.status\"\n            :tooltip=\"vmImageSize.tooltip\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-10\" style=\"align-items: center;\"> <!-- Network Select / Boot Configuration -->\n        <div class=\"col span-6\"> <!-- Network Select -->\n          <LabeledSelect\n            v-model:value=\"networks.selected\"\n            labelKey=\"driver.nutanix.config.component.vmNetwork.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.vmNetwork.placeholder`)\"\n            :taggable=\"true\"\n            :multiple=\"true\"\n            :options=\"networks.options\"\n            :disabled=\"!networks.enabled || mybusy\"\n            :loading=\"networks.busy\"\n            :searchable=\"true\"\n            :required=\"true\"\n            @update:value=\"labelSelectAddWrongTag($event, networks); filterNetworks(); canAuthenticate()\"\n          />\n        </div>\n        <div class=\"col span-6\" style=\"padding-left: 10px;\"> <!-- Boot Configuration -->\n          <div class=\"nutanix-config\"> <!-- Boot Configuration title -->\n            <div class=\"title\">\n              {{ t('driver.nutanix.config.title.bootType') }}\n            </div>\n          </div>\n          <RadioGroup\n            name=\"bootConfiguration\"\n            :options='[\"Legacy\", \"UEFI\"]'\n            :row=\"true\"\n            :value=\"bootType\"\n            @update:value=\"bootType = $event\"\n            :disabled=\"mybusy\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- VM Categories -->\n        <div class=\"col span-12\">\n          <LabeledSelect\n            v-model:value=\"vmCategories.selected\"\n            labelKey=\"driver.nutanix.config.component.vmCategories.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.vmCategories.placeholder`)\"\n            :taggable=\"true\"\n            :multiple=\"true\"\n            :options=\"vmCategories.options\"\n            :disabled=\"!vmCategories.enabled || mybusy\"\n            :loading=\"vmCategories.busy\"\n            @selecting=\"labelSelectAddWrongTag($event, vmCategories)\"\n          />\n        </div>\n      </div>\n      <!-- vmSerialPort -->\n      <Checkbox\n        val\n        :value=\"vmSerialPort\"\n        :valueWhenTrue=\"true\"\n        labelKey=\"driver.nutanix.config.component.vmSerialPort.label\"\n        style=\"margin-top: 5px;\"\n        @update:value=\"vmSerialPort = !vmSerialPort;\"\n        :disabled=\"mybusy\"\n      />\n      <!-- Collapse Additional Disk Size  /  Storage Container -->\n      <Collapse\n        :open=\"is_SC_colapse\"\n        :title=\"t(`driver.nutanix.config.title.collapseAdditionalDisk`)\"\n        @update:open=\"is_SC_colapse = !is_SC_colapse\"\n      >\n      <div>\n        <div class=\"row\"> <!-- Additional Disk Size  /  Storage Container -->\n          <div class=\"col span-6\">\n            <UnitInput\n              :value=\"additionalDiskSize.selected\"\n              labelKey=\"driver.nutanix.config.component.diskSize.label\"\n              :suffix=\"t(`driver.nutanix.config.component.diskSize.suffix`)\"\n              type=\"number\"\n              :disabled=\"!additionalDiskSize.enabled || mybusy\"\n              :loading=\"additionalDiskSize.busy\"\n              @update:value=\"dynamicStorageContainer($event); canAuthenticate()\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-model:value=\"storageContainer.selected\"\n              labelKey=\"driver.nutanix.config.component.storageContainer.label\"\n              :placeholder=\"t(`driver.nutanix.config.component.storageContainer.placeholder`)\"\n              :options=\"storageContainer.options\"\n              :disabled=\"!additionalDiskSize.selected || !storageContainer.enabled || mybusy\"\n              :loading=\"storageContainer.busy\"\n              :searchable=\"false\"\n              @update:value=\"canAuthenticate()\"\n            />\n          </div>\n        </div>\n      </div>\n      </Collapse>\n      <hr class=\"mt-10\">\n      <div class=\"nutanix-config\"> <!-- Cloud-init title -->\n        <div class=\"title\">\n          {{ t('driver.nutanix.config.title.cloudInit') }}\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- Cloud Init Config YAML -->\n        <div class=\"col span-12\">\n        <CodeMirror\n          style=\"background: #f5f5f5;\"\n          mode=\"edit\"\n          minHeight=5\n          :value=cloudInit\n          :options=\"mybusy ? {readOnly:true, cursorBlinkRate:-1} : {readOnly: false}\"\n          :asTextArea=\"false\"\n          @onInput=\"cloudInit = $event\"\n        />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"errors.length\">\n        <div\n          v-for=\"(err, idx) in errors\"\n          :key=\"idx\"\n        >\n          <Banner\n            color=\"error\"\n            :label=\"stringify(err)\"\n          />\n        </div>\n    </div>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n  .file-button {\n    align-items: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 100%;\n    display: flex;\n\n    > .file-selector {\n      height: calc($input-height - 2px);\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n\n  .nutanix-config {\n    display: flex;\n    align-items: center;\n\n    > .title {\n      font-weight: bold;\n      padding: 4px 0;\n    }\n\n    > .loading {\n      margin-left: 20px;\n      display: flex;\n      align-items: center;\n\n      > i {\n        margin-right: 4px;;\n      }\n    }\n  }\n</style>\n\n\n","import { render } from \"./nutanix.vue?vue&type=template&id=08d106de&scoped=true\"\nimport script from \"./nutanix.vue?vue&type=script&lang=js\"\nexport * from \"./nutanix.vue?vue&type=script&lang=js\"\n\nimport \"./nutanix.vue?vue&type=style&index=0&id=08d106de&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-08d106de\"]])\n\nexport default __exports__"],"names":["content","__esModule","default","module","id","locals","exports","add","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Nutanix","constructor","$store","obj","_defineProperty","nutanixcredentialConfig","forEach","key","this","credentialID","$dispatch","dispatch","testConnection","baseUrl","endpoint","port","url","headers","Accept","btoa","username","password","res","method","redirectUnauthorized","root","_status","error","console","getClusterList","value","initial","getOptions","api","field","filter","cluster","config","hypervisorTypes","includes","getImages","getNetwork","mapper","async","vpc","network","subnetType","getVpc","vpcReference","data","undefined","baseName","name","clusterReference","clusterReferenceId","isExternal","makeComputeRequest","getStorageContainer","storage","clusterExtId","getCategories","categorie","getProjectsName","project","spec","constructTotalResponse","apiPath","initialDataLength","total","pageCount","Math","ceil","i","nextPageResponse","push","constructProjectTotalResponse","entities","options","busy","enabled","selected","isArray","metadata","total_matches","length","totalAvailableResults","list","k","Promise","all","convertToOptions","unique","index","findIndex","duplicates","found","find","option","JSON","stringify","sorted","sort","a","b","localeCompare","p","label","___CSS_LOADER_EXPORT___","class","style","_createElementBlock","_ctx","$fetchState","pending","_createBlock","_component_Loading","delayed","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","t","authenticating","ready","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createVNode","_component_LabeledSelect","projectName","$event","$options","dynamicProjectName","canAuthenticate","labelKey","placeholder","disabled","mybusy","loading","searchable","_hoisted_8","clusters","setClusterReferenceId","required","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_component_UnitInput","vmCpus","suffix","type","min","max","_cache","validInput","status","tooltip","_component_Checkbox","vmCpuPassthrough","valueWhenTrue","_hoisted_13","vmCores","_hoisted_14","vmMem","_hoisted_15","_hoisted_16","vmImage","dynamicVmImageSize","_hoisted_17","vmImageSize","_hoisted_18","_hoisted_19","networks","labelSelectAddWrongTag","filterNetworks","taggable","multiple","_hoisted_20","_hoisted_21","_hoisted_22","_component_RadioGroup","row","bootType","_hoisted_23","_hoisted_24","vmCategories","onSelecting","val","vmSerialPort","_component_Collapse","open","is_SC_colapse","title","_withCtx","_hoisted_25","_hoisted_26","additionalDiskSize","dynamicStorageContainer","_hoisted_27","storageContainer","_","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_component_CodeMirror","mode","minHeight","cloudInit","readOnly","cursorBlinkRate","asTextArea","onOnInput","errors","_hoisted_32","_Fragment","_renderList","err","idx","_component_Banner","color","initOptions","init","baseOption","initUnitOptions","_min","_max","components","Banner","Loading","KeyValue","LabeledSelect","UnitInput","CodeMirror","Collapse","Checkbox","RadioGroup","mixins","CreateEditView","props","uuid","String","credentialId","Boolean","provider","emits","fetch","$emit","_CREATE","initAuthentication","vmNetwork","extId","diskSize","containerExtId","_VIEW","InitData","watch","$fetch","newVal","oldVal","c","uniqueNetworks","uniq","computed","methods","credential","NORMAN","CLOUD_CREDENTIAL","replace","secret","SECRET","atob","havePassword","os","setConfiguration","getters","clusterName","then","imageName","networkIdList","resources","subnet_reference_list","clusterReferenceIdList","cluster_reference_list","object","sizeBytes","selectedNetwork","isAdvancedNetworking","component","syncValue","toString","toLowerCase","test","__exports__","render"],"sourceRoot":""}